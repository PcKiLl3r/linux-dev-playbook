---
- name: Setup Linux Development Machine Environment
  hosts: localhost
  become: true
  vars_files:
    - vault/become_pass.yml
    - vault/bluetooth.yml
    # - config.yml

  # vars:
  #   use_on_tv: false
  #   restore_last_ssh: true

  pre_tasks:
    - name: Validate preset is specified
      ansible.builtin.fail:
        msg: "PRESET environment variable must be set. Usage: PRESET=thinkpad_t16_gen2 ansible-playbook main.yml"
      when: lookup('env', 'PRESET') == ""

    - name: Load preset configuration
      ansible.builtin.include_vars:
        file: "presets/{{ lookup('env', 'PRESET') }}.yml"

    # - name: Include Vars
    #   ansible.builtin.include_vars:
    #     file: ./vars/common.yml

    - name: Determine target operating system
      ansible.builtin.set_fact:
        target_os: "{{ os_override | default(ansible_distribution | lower, true) }}"

    - name: Include distro vars
      ansible.builtin.include_vars:
        file: "./vars/{{ target_os }}.yml"

    - name: Show configuration
      ansible.builtin.debug:
        msg:
          - "Using preset: {{ lookup('env', 'PRESET') }}"
          - "Machine: {{ machine_name }}"
          - "OS: {{ target_os }}"
          - "Window Manager: {{ window_manager }}"

    - name: Show detected operating system
      ansible.builtin.debug:
        msg: "Installing for OS: {{ target_os }}"

    - name: Include Core init tasks
      ansible.builtin.include_tasks:
        file: ./tasks/core.yml

        #    - name: Import GUI Apps Install
        #      ansible.builtin.include_tasks:
        #        file: ./tasks/gui-software.yml
        #      become: false
        #
        #   - name: Import Mobile Dev Install
        #     ansible.builtin.include_tasks:
        #       file: ./tasks/mobile-dev.yml
        #     become: false
        #
        #   TODE make more plays instead of 1 play with many tasks

  tasks:
    - name: Include SSH key restore/create
      ansible.builtin.include_tasks:
        file: ./tasks/ssh.yml
      vars:
        machine_upgrade: "{{ restore_last_ssh }}"

    - name: Import Utility Packages Install
      ansible.builtin.import_tasks:
        file: ./tasks/utils.yml

    - name: Import Dev-Tools Install
      ansible.builtin.import_tasks:
        file: ./tasks/dev-tools.yml

    - name: Import Browser Install
      ansible.builtin.import_tasks:
        file: ./tasks/browsers.yml

    - name: Import Codecs Install
      ansible.builtin.import_tasks:
        file: ./tasks/codecs.yml
      when: install_codecs | bool

    - name: Import Bash Install
      ansible.builtin.import_tasks:
        file: ./tasks/bash.yml
      when: shell == 'bash'

    - name: Import ZShell Install
      ansible.builtin.import_tasks:
        file: ./tasks/zsh.yml
      when: shell == 'zsh'

    - name: Import Fish Install
      ansible.builtin.import_tasks:
        file: ./tasks/fish.yml
      when: shell == 'fish'

    - name: Import Programming Languages/Runtimes Install
      ansible.builtin.import_tasks:
        file: ./tasks/prog-lang.yml

    - name: Import TMux Install
      ansible.builtin.import_tasks:
        file: ./tasks/tmux.yml

    - name: Import NeoVim Install
      ansible.builtin.import_tasks:
        file: ./tasks/neovim.yml
      when: "'neovim' in code_editors"

    - name: Import Vim Install
      ansible.builtin.import_tasks:
        file: ./tasks/vim.yml
      when: "'vim' in code_editors"

    - name: Import VS Code Install
      ansible.builtin.import_tasks:
        file: ./tasks/vscode.yml
      when: "'vscode' in code_editors"

    - name: Import Thunar Install
      ansible.builtin.import_tasks:
        file: ./tasks/thunar.yml
      when: file_manager == 'thunar'

    - name: Import Dolphin Install
      ansible.builtin.import_tasks:
        file: ./tasks/dolphin.yml
      when: file_manager == 'dolphin'

    - name: Import Nautilus Install
      ansible.builtin.import_tasks:
        file: ./tasks/nautilus.yml
      when: file_manager == 'nautilus'

    - name: Import Yazi Install
      ansible.builtin.import_tasks:
        file: ./tasks/yazi.yml
      when: terminal_file_manager == 'yazi'

    - name: Import Ranger Install
      ansible.builtin.import_tasks:
        file: ./tasks/ranger.yml
      when: terminal_file_manager == 'ranger'

    - name: Import ClickUp Install
      ansible.builtin.import_tasks:
        file: ./tasks/clickup.yml
      when: ai_tool == 'clickup'

    - name: Import VLC Install
      ansible.builtin.import_tasks:
        file: ./tasks/vlc.yml
      when: video_player == 'vlc'

    - name: Import MPV Install
      ansible.builtin.import_tasks:
        file: ./tasks/mpv.yml
      when: video_player == 'mpv'

    - name: Import qBittorrent Install
      ansible.builtin.import_tasks:
        file: ./tasks/qbittorrent.yml
      when: torrent_client == 'qbittorrent'

    - name: Import Transmission Install
      ansible.builtin.import_tasks:
        file: ./tasks/transmission.yml
      when: torrent_client == 'transmission'

    - name: Import Rofi Install
      ansible.builtin.import_tasks:
        file: ./tasks/rofi.yml
      when: app_launcher == 'rofi'

    - name: Import Wofi Install
      ansible.builtin.import_tasks:
        file: ./tasks/wofi.yml
      when: app_launcher == 'wofi'

    - name: Import GIMP Install
      ansible.builtin.import_tasks:
        file: ./tasks/gimp.yml
      when: install_gimp | bool

    - name: Import Inkscape Install
      ansible.builtin.import_tasks:
        file: ./tasks/inkscape.yml
      when: install_inkscape | bool

    - name: Import LibreOffice Install
      ansible.builtin.import_tasks:
        file: ./tasks/libreoffice.yml
      when: install_libreoffice | bool

    - name: Import Audacity Install
      ansible.builtin.import_tasks:
        file: ./tasks/audacity.yml
      when: install_audacity | bool

    - name: Import Qalculate Install
      ansible.builtin.import_tasks:
        file: ./tasks/qalculate.yml
      when: install_qalculate | bool

    - name: Import Calcurse Install
      ansible.builtin.import_tasks:
        file: ./tasks/calcurse.yml
      when: install_calcurse | bool

    - name: Import DBeaver Install
      ansible.builtin.import_tasks:
        file: ./tasks/dbeaver.yml
      when: install_dbeaver | bool

    - name: Import pgModeler Install
      ansible.builtin.import_tasks:
        file: ./tasks/pgmodeler.yml
      when: install_pgmodeler | bool

    - name: Import Graphviz Install
      ansible.builtin.import_tasks:
        file: ./tasks/graphviz.yml
      when: install_graphviz | bool

    - name: Import Dia Install
      ansible.builtin.import_tasks:
        file: ./tasks/dia.yml
      when: install_dia | bool

    - name: Import i3 Install
      ansible.builtin.import_tasks:
        file: ./tasks/i3.yml
      when: window_manager == 'i3'

    - name: Import Hyprland Install
      ansible.builtin.import_tasks:
        file: ./tasks/hyprland.yml
      when: window_manager == 'hyprland'

    - name: Import GNOME Install
      ansible.builtin.import_tasks:
        file: ./tasks/gnome.yml
      when: desktop_environment == 'gnome'

    - name: Import KDE Install
      ansible.builtin.import_tasks:
        file: ./tasks/kde.yml
      when: desktop_environment == 'kde'

    - name: Import XFCE Install
      ansible.builtin.import_tasks:
        file: ./tasks/xfce.yml
      when: desktop_environment == 'xfce'

    - name: Import keyboard setup
      ansible.builtin.import_tasks:
        file: ./tasks/keyboard.yml
      tags: keyboard

    - name: Import Bluetooth & audio setup
      ansible.builtin.import_tasks:
        file: ./tasks/bluetooth.yml
      when: install_bluetooth | bool

    - name: Import dotfiles setup
      ansible.builtin.import_tasks:
        file: ./tasks/dotfiles.yml
      when: dotfiles_repo | default('') | length > 0

    # - name: Import machine preset overrides
    #   ansible.builtin.import_tasks:
    #     file: ./tasks/presets.yml
