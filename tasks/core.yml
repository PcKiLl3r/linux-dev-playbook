---
- name: Create user
  ansible.builtin.user:
    name: "{{ username }}"
    state: present
    createhome: true
  become_method: ansible.builtin.sudo

- name: Ensure user has sudo privileges
  ansible.builtin.user:
    name: "{{ username }}"
    groups: "{{ 'wheel' if ansible_os_family == 'RedHat' else 'sudo' }}"
    append: true
  become: true

# Ensure the dnf Python bindings are available before using the package
# module on Fedora-based systems. Minimal container images may omit the
# python3-dnf package which Ansible's dnf backend requires.
- name: Check for python3-dnf  # noqa command-instead-of-module
  ansible.builtin.command: rpm -q python3-dnf
  register: dnf_python_check
  failed_when: false
  changed_when: false
  when: pkg_mgr == 'dnf'

- name: Install python3-dnf  # noqa command-instead-of-module
  ansible.builtin.command: dnf -y install python3-dnf
  register: dnf_python_install
  become: true
  when:
    - pkg_mgr == 'dnf'
    - dnf_python_check.rc != 0
  changed_when: "'Nothing to do' not in dnf_python_install.stdout"

- name: Install setup dependencies
  ansible.builtin.package:
    name: "{{ core_packages }}"
    state: present
    use: "{{ pkg_mgr }}"

- name: Install Flatpak runtime packages
  ansible.builtin.package:
    name: "{{ flatpak_runtime_packages }}"
    state: present
    use: "{{ pkg_mgr }}"
  when:
    - enable_flatpak | default(false)
    - flatpak_runtime_packages is defined

- name: Ensure Flatpak system helper is enabled
  ansible.builtin.systemd:
    name: flatpak-system-helper.service
    state: started
    enabled: true
  become: true
  when:
    - enable_flatpak | default(false)
    - ansible_service_mgr == 'systemd'

- name: Configure system Flathub Flatpak remote
  ansible.builtin.command: >-
    flatpak remote-add --if-not-exists --system flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  register: flathub_system_remote
  changed_when: >-
    'already exists' not in (flathub_system_remote.stdout | lower) and
    'already exists' not in (flathub_system_remote.stderr | lower)
  become: true
  when: enable_flatpak | default(false)

- name: Configure user Flathub Flatpak remote
  ansible.builtin.command: >-
    flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  register: flathub_user_remote
  changed_when: >-
    'already exists' not in (flathub_user_remote.stdout | lower) and
    'already exists' not in (flathub_user_remote.stderr | lower)
  become: true
  become_user: "{{ username }}"
  when: enable_flatpak | default(false)

- name: Check if linux-dev-playbook repo exists
  ansible.builtin.stat:
    path: ~/personal/linux-dev-playbook/.git
  register: ldp_repo_stat
  become_user: "{{ username }}"
  become: true

- name: Clone this repo to mirror real environment
  ansible.builtin.git:
    repo: https://github.com/PcKiLl3r/linux-dev-playbook.git
    dest: ~/personal/linux-dev-playbook
    version: master
  become_user: "{{ username }}"
  become: true
  when: not ldp_repo_stat.stat.exists

- name: Update apt cache (on Debian based systems only)
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'

- name: Enable RPM Fusion repositories on Fedora
  ansible.builtin.dnf:
    name:
      - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
    disable_gpg_check: true
  when: ansible_distribution == 'Fedora'
  become: true

- name: Ensure pacman contrib utilities
  ansible.builtin.package:
    name: "{{ core_pacman_contrib_package }}"
    state: present
    use: "{{ pkg_mgr }}"
  when: target_os == 'arch'
