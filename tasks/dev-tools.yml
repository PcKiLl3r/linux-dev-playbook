---
- name: Install Development Tools
  ansible.builtin.package:
    name: "{{ dev_tools_packages }}"
    state: present
    use: "{{ pkg_mgr }}"

- name: Create temporary directory for Docker Desktop package
  ansible.builtin.tempfile:
    state: directory
    prefix: docker-desktop-
  register: docker_desktop_tmpdir
  when: install_docker_desktop | bool

- name: Configure Docker CE repository for Docker Desktop
  ansible.builtin.yum_repository:
    name: "{{ docker_desktop_repo_name }}"
    description: Docker CE Stable - $releasever
    baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/fedora/gpg
    enabled: true
  when:
    - install_docker_desktop | bool
    - target_os == 'fedora'

- name: Install Docker Desktop dependencies
  ansible.builtin.package:
    name: "{{ docker_desktop_dependencies }}"
    state: present
    use: "{{ pkg_mgr }}"
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Download Docker Desktop package
  ansible.builtin.get_url:
    url: "{{ docker_desktop_package_url }}"
    dest: "{{ docker_desktop_tmpdir.path }}/{{ docker_desktop_package_filename }}"
    mode: "0644"
    headers:
      User-Agent: curl/7.88.1
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Install Docker Desktop package on Fedora
  ansible.builtin.dnf:
    name: "{{ docker_desktop_tmpdir.path }}/{{ docker_desktop_package_filename }}"
    state: present
  when:
    - install_docker_desktop | bool
    - target_os == 'fedora'

- name: Install Docker Desktop package on Arch
  ansible.builtin.pacman:
    name: "{{ docker_desktop_tmpdir.path }}/{{ docker_desktop_package_filename }}"
    state: present
  when:
    - install_docker_desktop | bool
    - target_os == 'arch'

- name: Ensure Docker service is enabled and running
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - docker.socket
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Check lingering status for {{ username }}
  ansible.builtin.command: "loginctl show-user {{ username }}"
  register: docker_desktop_linger_status
  changed_when: false
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Enable lingering for {{ username }}
  ansible.builtin.command: "loginctl enable-linger {{ username }}"
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']
    - docker_desktop_linger_status.stdout is search('Linger=no')

- name: Get UID for {{ username }}
  ansible.builtin.command: "id -u {{ username }}"
  register: docker_desktop_uid
  changed_when: false
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Ensure Docker Desktop user services are enabled and running
  ansible.builtin.systemd:
    name: "{{ item }}"
    scope: user
    enabled: true
    state: started
  loop:
    - docker-desktop
    - docker-desktop-proxy
  become: true
  become_user: "{{ username }}"
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ docker_desktop_uid.stdout }}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ docker_desktop_uid.stdout }}/bus"
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Verify Docker installation
  ansible.builtin.command: docker --version
  register: docker_check
  changed_when: false
  failed_when: docker_check.rc != 0

- name: Verify Docker daemon availability
  ansible.builtin.command: docker version
  register: docker_daemon_check
  become: true
  become_user: "{{ username }}"
  changed_when: false
  failed_when: docker_daemon_check.rc != 0
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Verify Docker Desktop CLI availability
  ansible.builtin.command: com.docker.cli -v
  register: docker_desktop_cli_check
  become: true
  become_user: "{{ username }}"
  changed_when: false
  failed_when: docker_desktop_cli_check.rc != 0
  when:
    - install_docker_desktop | bool
    - target_os in ['fedora', 'arch']

- name: Ensure Group "docker" Exists with correct gid
  ansible.builtin.group:
    name: docker
    state: present
  become: false

- name: Add User to "docker" Group
  ansible.builtin.user:
    name: "{{ username }}"
    groups: docker
    append: true

- name: Add username to git Config
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ username }}"
  become: false

- name: Add email to git Config
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ email }}"
  become: false
