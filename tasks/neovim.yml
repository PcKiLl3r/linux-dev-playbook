---
#- name: Check if newer version of NeoVim is available
# todo - check if newer version with git clone first

#- name: Remove old versions of neovim
#  ansible.builtin.file:
#    path: "{{ home }}/neovim"
#    state: absent

- name: Clone neovim
  ansible.builtin.git:
    repo: https://github.com/neovim/neovim.git
    dest: "{{ home }}/neovim"
    depth: 1
    version: stable
  register: gitclone_result
  become: true
  become_user: "{{ username }}"

- name: Install NeoVim Dependencies
  ansible.builtin.package:
    name: "{{ neovim_dependencies_packages }}"
    state: present
    use: "{{ pkg_mgr }}"

- name: Plenary
  ansible.builtin.git:
    repo: "https://github.com/nvim-lua/plenary.nvim.git"
    dest: "{{ personal }}/plenary.nvim"
    depth: 1
    version: master
  become: true
  become_user: "{{ username }}"

# TODO should install neovim with:
    # make CMAKE_BUILD_TYPE=RelWithDebInfo
    # git checkout stable
    # then make install
    #
    # also change install location...

# TODO fix zsh not stowing propperly
    #  remove .zshrc then stow
    #  source .zshrc and zsh_profile after

- name: Install NeoVim with Make  # noqa no-handler
  ansible.builtin.command:
    cmd: make install
    chdir: "{{ home }}/neovim"
  when: gitclone_result.changed
  become: true
  changed_when: false

- name: Verify NeoVim installation
  ansible.builtin.command: nvim --version
  register: nvim_check
  changed_when: false
  failed_when: nvim_check.rc != 0
  become: true
  become_user: "{{ username }}"

- name: Install Rust
  ansible.builtin.package:
    name: "{{ neovim_rust_packages }}"
    state: present
    use: "{{ pkg_mgr }}"

- name: Install Stylua
  ansible.builtin.command: cargo install stylua
  changed_when: false
  become: true
  become_user: "{{ username }}"

#- name: Install LuaRocks
#  ansible.builtin.shell:
#    chdir: "{{ dev }}"
#    cmd: ./resources/luarocks.sh
#  become: false
- name: Install LuaRocks
  ansible.builtin.package:
    name: "{{ neovim_luarocks_package }}"
    state: present
    use: "{{ pkg_mgr }}"

- name: Install LuaCheck
  ansible.builtin.command: luarocks --local install luacheck
  args:
    creates: "{{ home }}/.luarocks/bin/luacheck"
  changed_when: false
  become: true
  become_user: "{{ username }}"
